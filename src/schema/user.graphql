type User {
  id: ID!
  name: String!
  email: String!
  createdAt: String!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type AuthPayload {
  user: User!
  token: String!
}

input UpdateUserInput {
    name: String
    email: String
    password: String
}

type Query {
  getCurrentUser: User
  getBalance: Float!
}

type Mutation {
  register(input: RegisterInput!): AuthPayload!
  login(input: LoginInput!): AuthPayload!
  updateUser(input: UpdateUserInput!): User!
  deleteUser: Boolean!
}
